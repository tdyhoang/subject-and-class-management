@model IEnumerable<SubjectAndClassManagement.Models.Class>
@{
    ViewData["Title"] = "Timetable";
    var daysOfWeek = new[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" };
}

<style>
    .form-item {
        float: left;
    }

    .form-item .form-select {
        width: 220px;
    }

    .fieldset-wrapper .item-submit {
        clear: both;
    }

    th, td {
        vertical-align: middle;
    }

    tbody td {
        background-color: #152259;
    }




    table tr td.center-cell-data {
        font-weight: bold;
        text-align: center;
        width: 90px;
    }

    thead tr th {
        text-align: center;
    }

    .odd td, .even td {
        background-color: #ccc;
    }

    .rowspan_data {
        max-width: 208px;
        text-align: center;
        background-color: #ccc;
    }
</style>

<h2 class="text-center">Timetable school year</h2>
<table class="table table-bordered mt-3 ms-1">
    <thead>
        <tr>
            <th>Day / Period</th>
            @foreach (var day in daysOfWeek)
            {
                    <th>@day</th>
            }
        </tr>
    </thead>
    <tbody>
        @for (int period = 1; period <= 10; period++)
        {
                <tr class="@(period % 2 == 0 ? "even" : "odd")">
                    <td class="center-cell-data">
                    @Html.Raw($"Period {period}<br>({GetTimeRange(period)})")
                    </td>
                @foreach (var day in daysOfWeek)
                {
                    var firstPeriodNumber = period == 10 ? 0 : period;
                    var classForPeriodAndDay = Model
                        .FirstOrDefault(c => c.days_of_week == day && c.first_period == firstPeriodNumber);

                    if (classForPeriodAndDay != null)
                    {
                                    <td rowspan="@classForPeriodAndDay.class_period" class="rowspan_data">
                                        <strong>@classForPeriodAndDay.Subject.subject_name</strong>
                                        <br>
                                        Size: @classForPeriodAndDay.number_of_members
                                        <br>
                            @classForPeriodAndDay.Subject.subject_description
                                        <br>
                            @classForPeriodAndDay.Room.room_id
                                        <br>
                                        Start: @classForPeriodAndDay.start_date.ToString("dd/MM/yy")
                                        <br>
                                        End: @classForPeriodAndDay.end_date.ToString("dd/MM/yy")
                                    </td>
                    }
                    else if (!IsClassScheduledForPeriod(Model, day, period))
                    {
                                    <td></td>
                    }
                }
                </tr>
        }
    </tbody>
</table>

@section Scripts {
        <script>
            document.querySelector('.form-submit').addEventListener('click', function() {
                // Choose semester
            });
        </script>
}

    @functions {
    private string GetTimeRange(int lesson)
    {
        // Return a string representing the time range for the lesson
        switch (lesson)
        {
            case 1: return "7:30 - 8:15";
            case 2: return "8:15 - 9:00";
            case 3: return "9:00 - 9:45";
            case 4: return "10:00 - 10:45";
            case 5: return "10:45 - 11:30";
            case 6: return "13:00 - 13:45";
            case 7: return "13:45 - 14:30";
            case 8: return "14:30 - 15:15";
            case 9: return "15:30 - 16:15";
            case 10: return "16:15 - 17:00";
            default: return "Extra Classes";
        }
    }
    private bool IsClassScheduledForPeriod(IEnumerable<SubjectAndClassManagement.Models.Class> classes, string day, int period)
    {
        return classes.Any(c => c.days_of_week == day &&
                                c.first_period <= period &&
                                (c.first_period + c.class_period - 1) >= period);
    }
}